{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/root.tsx", "/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/index.tsx", "../app/lib/db.server.ts", "../app/components/Stats.tsx", "../app/components/SeasonLeaderboard.tsx", "../app/components/Event.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from 'react-dom/server';\nimport { CacheProvider } from '@emotion/react';\nimport createEmotionServer from '@emotion/server/create-instance';\nimport { RemixServer } from '@remix-run/react';\nimport type { EntryContext } from '@remix-run/node'; // Depends on the runtime you choose\n\nimport { ServerStyleContext } from './context';\nimport createEmotionCache from './createEmotionCache';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>,\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>,\n  );\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import React, { createContext } from 'react';\n\nexport interface ServerStyleContextData {\n  key: string;\n  ids: Array<string>;\n  css: string;\n}\n\nexport const ServerStyleContext = createContext<ServerStyleContextData[] | null>(null);\n\nexport interface ClientStyleContextData {\n  reset: () => void;\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(null);\n", "import createCache from '@emotion/cache';\n\nexport default function createEmotionCache() {\n  return createCache({ key: 'css' });\n}\n", "import React, { useContext, useEffect } from 'react';\nimport { withEmotionCache } from '@emotion/react';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from '@remix-run/react';\nimport type { MetaFunction, LinksFunction } from '@remix-run/node'; // Depends on the runtime you choose\n\nimport { ServerStyleContext, ClientStyleContext } from './context';\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Tisdagsgolfen',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: 'preconnect', href: 'https://fonts.googleapis.com' },\n    { rel: 'preconnect', href: 'https://fonts.gstaticom' },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap',\n    },\n  ];\n};\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(({ children }: DocumentProps, emotionCache) => {\n  const serverStyleData = useContext(ServerStyleContext);\n  const clientStyleData = useContext(ClientStyleContext);\n\n  // Only executed on client\n  useEffect(() => {\n    // re-link sheet container\n    emotionCache.sheet.container = document.head;\n    // re-inject tags\n    const tags = emotionCache.sheet.tags;\n    emotionCache.sheet.flush();\n    tags.forEach((tag) => {\n      (emotionCache.sheet as any)._insertTag(tag);\n    });\n    // reset cache to reapply global styles\n    clientStyleData?.reset();\n  }, []);\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        {serverStyleData?.map(({ key, ids, css }) => (\n          <style\n            key={key}\n            data-emotion={`${key} ${ids.join(' ')}`}\n            dangerouslySetInnerHTML={{ __html: css }}\n          />\n        ))}\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n});\n\n// import { extendTheme, ChakraProvider } from '@chakra-ui/react'\n\n// const colors = {\n//   brand: {\n//     900: '#1a365d',\n//     800: '#153e75',\n//     700: '#2a69ac',\n//   },\n// }\n\n// const theme = extendTheme({ colors })\n\nexport default function App() {\n  return (\n    <Document>\n      <ChakraProvider>\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  );\n}\n", "import { json } from '@remix-run/node';\nimport type { LoaderFunction } from '@remix-run/node';\nimport { Heading } from '@chakra-ui/react';\nimport { useLoaderData } from '@remix-run/react';\nimport type { Season } from '@prisma/client';\n\nimport db from '~/lib/db.server';\nimport Stats from '~/components/Stats';\nimport SeasonLeaderboard from '~/components/SeasonLeaderboard';\nimport Event from '~/components/Event';\n\nexport type SeasonWithEventCount = Season & {\n  _count: {\n    events: number;\n  };\n};\n\nexport const loader: LoaderFunction = async () => {\n  const data = await db.season.findFirst({\n    include: {\n      _count: {\n        select: { events: true },\n      },\n    },\n  });\n  return json(data);\n};\n\nexport default function Index() {\n  const season = useLoaderData<SeasonWithEventCount | null>();\n\n  if (!season) {\n    return <h1>Kunde inte hitta s\u00E4song.. Kim har gjort bort sig</h1>;\n  }\n\n  return (\n    <div>\n      <Heading>Tisdagsgolfen {season.name}</Heading>\n      <Stats />\n      <SeasonLeaderboard season={season} />\n      <Event />\n    </div>\n  );\n}\n", "import { PrismaClient } from '@prisma/client';\n\nlet db: PrismaClient;\n\ndeclare global {\n  var db: PrismaClient | undefined;\n}\n\n// PrismaClient is attached to the `global` object in development to prevent\n// exhausting your database connection limit.\nif (process.env.NODE_ENV === 'production') {\n  db = new PrismaClient();\n  db.$connect();\n} else {\n  if (!global.db) {\n    global.db = new PrismaClient();\n    global.db.$connect();\n  }\n\n  db = global.db;\n}\n\nexport default db;\n", "import { Heading } from '@chakra-ui/react';\nimport React from 'react';\n\nconst Stats = () => {\n  return (\n    <div>\n      <Heading as=\"h2\" size=\"md\">\n        Statistics\n      </Heading>\n    </div>\n  );\n};\n\nexport default Stats;\n", "import React from 'react';\nimport { Heading } from '@chakra-ui/react';\n\nimport type { SeasonWithEventCount } from '~/routes/index';\n\ninterface Props {\n  season: SeasonWithEventCount;\n}\n\nconst SeasonLeaderboard: React.FunctionComponent<Props> = ({ season }) => {\n  return (\n    <div>\n      {' '}\n      <Heading as=\"h2\" size=\"md\">\n        Ledartavla efter {season._count.events} rundor\n      </Heading>\n    </div>\n  );\n};\n\nexport default SeasonLeaderboard;\n", "import { Heading } from '@chakra-ui/react';\nimport React from 'react';\n\nconst Event = () => {\n  return (\n    <div>\n      <Heading as=\"h2\" size=\"md\">\n        Event leaderboard\n      </Heading>\n    </div>\n  );\n};\n\nexport default Event;\n", "export default {'version':'3f3bd7d1','entry':{'module':'/build/entry.client-3HTGPDGT.js','imports':['/build/_shared/chunk-5KERRTSJ.js','/build/_shared/chunk-ZGYFCNIQ.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-SZTAYRF4.js','imports':['/build/_shared/chunk-XPOZ4UBM.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-JUAUVNIM.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-3F3BD7D1.js'};", "\nimport * as entryServer from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/root.tsx\";\nimport * as route1 from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": []
}
