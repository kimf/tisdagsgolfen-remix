{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/root.tsx", "/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/scoring_sessions/index.tsx", "../app/lib/supabase.server.ts", "/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/scoring_sessions/$id.tsx", "/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/play/index.tsx", "../app/components/Setup/SetupWrapper.tsx", "../app/components/Setup/Initial.tsx", "../app/components/Setup/SelectPlayers.tsx", "../app/components/Setup/Setup.tsx", "/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/index.tsx", "../app/components/Stats.tsx", "../app/components/SeasonLeaderboard.tsx", "../app/components/Event.tsx", "../app/components/ThemeToggle/ThemeToggle.tsx", "../app/components/Icons/MoonIcon.tsx", "../app/components/Icons/SunIcon.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from '@remix-run/node';\nimport { RemixServer } from '@remix-run/react';\nimport { renderToString } from 'react-dom/server';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  const markup = renderToString(<RemixServer context={remixContext} url={request.url} />);\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from '@remix-run/node';\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from '@remix-run/react';\nimport { createTheme, CssBaseline, NextUIProvider } from '@nextui-org/react';\nimport useDarkMode from '@fisch0920/use-dark-mode';\n\nimport IndexCss from '~/styles/index.css';\n\nconst lightTheme = createTheme({\n  type: 'light',\n  theme: {\n    fonts: {\n      sans: \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto','Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\",\n    },\n  },\n});\n\nconst darkTheme = createTheme({\n  type: 'dark',\n  theme: {\n    fonts: {\n      sans: \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto','Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\",\n    },\n  },\n});\n\nexport const links = () => {\n  return [\n    {\n      rel: 'stylesheet',\n      href: IndexCss,\n    },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Tisdagsgolfen',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport default function App() {\n  const darkMode = useDarkMode(false);\n\n  return (\n    <html lang=\"sv\">\n      <head>\n        <Meta />\n        {CssBaseline.flush()}\n        <Links />\n      </head>\n      <body>\n        <NextUIProvider theme={darkMode.value ? darkTheme : lightTheme}>\n          <div className=\"page-content\">\n            <Outlet />\n          </div>\n        </NextUIProvider>\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import type { ActionFunction } from '@remix-run/node';\nimport { redirect } from '@remix-run/node';\nimport invariant from 'tiny-invariant';\n\nimport supabase from '~/lib/supabase.server';\nimport type { definitions } from 'types/supabase';\nimport type { PlayState } from '~/components/Setup/SetupWrapper';\n\n// TODO: Move all business logic here to Postgres or Supabase RPC\nconst findOrCreateEvent = async (playState: PlayState) => {\n  const eventParams: Omit<definitions['events'], 'id'> = {\n    season_id: 1,\n    course_id: playState.course!.id,\n    special: playState.special,\n    scoring: playState.scoringType,\n    type: playState.eventType,\n    status: 'STARTED',\n  };\n  let eventId = null;\n\n  const { data: foundEvent } = await supabase\n    .from<definitions['events']>('events')\n    .select('id')\n    .eq('season_id', 1)\n    .eq('course_id', playState.course!.id)\n    .eq('special', playState.special)\n    .eq('scoring', playState.scoringType)\n    .eq('type', playState.eventType)\n    .single();\n\n  if (!foundEvent) {\n    const { data: createdEvent } = await supabase\n      .from<definitions['events']>('events')\n      .insert([eventParams])\n      .single();\n    eventId = createdEvent?.id;\n  } else {\n    eventId = foundEvent.id;\n  }\n  invariant(eventId, 'Vi har inget event!');\n  return eventId;\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const json = formData.get('json') as string;\n  const playState: PlayState = JSON.parse(json);\n\n  const eventId = await findOrCreateEvent(playState);\n\n  const { data: scoringSession } = await supabase\n    .from<definitions['scoring_sessions']>('scoring_sessions')\n    .insert([{ event_id: eventId, scorer_id: 1 }])\n    .single();\n\n  invariant(scoringSession, 'Kunde inte skapa scoringSession');\n\n  if (playState.eventType === 'INDIVIDUAL') {\n    const players = playState.players.map((player) => {\n      return {\n        strokes: player.strokes,\n        player_id: player.id,\n        scoring_session_id: scoringSession.id,\n      };\n    });\n    await supabase.from('scoring_players').insert(players);\n  }\n\n  if (playState.eventType === 'TEAM') {\n    const teams = playState.teams.filter((t) => t.playerIds.length > 0);\n    for (const team of teams) {\n      const { data: scoringTeam } = await supabase\n        .from('scoring_teams')\n        .insert([{ strokes: team.strokes, scoring_session_id: scoringSession.id }])\n        .single();\n\n      await supabase\n        .from('scoring_team_players')\n        .insert(team.playerIds.map((pid) => ({ scoring_team_id: scoringTeam.id, player_id: pid })));\n    }\n  }\n\n  return redirect(`/scoring_sessions/${scoringSession.id}`);\n};\n", "import { createClient } from '@supabase/supabase-js';\nimport invariant from 'tiny-invariant';\n\nconst supabaseUrl = process.env.SUPABASE_URL;\nconst supabaseAnonKey = process.env.SUPABASE_ANON_KEY;\n\ninvariant(supabaseUrl, 'SUPABASE_URL must be set in your environment variables.');\ninvariant(supabaseAnonKey, 'SUPABASE_URL must be set in your environment variables.');\n\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nexport default supabase;\n", "import { useLoaderData } from '@remix-run/react';\nimport type { LoaderFunction } from '@remix-run/node';\nimport { json } from '@remix-run/node';\n\nimport supabase from '~/lib/supabase.server';\nimport invariant from 'tiny-invariant';\n\n// scoring_teams(id, strokes, players:scoring_team_players(id, user:player_id(id, first_name, last_name, photo))\nconst user_fields = `id, first_name, last_name, photo`;\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.id, 'ID \u00E4r inte angett!');\n  const { data, error } = await supabase\n    .from('scoring_sessions')\n    .select(\n      `\n      id,\n      current_hole,\n      scorer:scorer_id (${user_fields}),\n      event:event_id (\n        id,\n        special,\n        scoring,\n        status,\n        type,\n        course:course_id(\n          id,\n          club,\n          name,\n          par,\n          holes(\n            id,\n            index,\n            number,\n            par\n          )\n        )\n      ),\n      scoring_players(\n        id,\n        strokes,\n        user:player_id(${user_fields})\n      ),\n      scoring_teams(\n        id,\n        strokes,\n        players:scoring_team_players(\n          id,\n          user:player_id(${user_fields})\n        )\n      )\n    `,\n    )\n    .eq('id', parseInt(params.id, 10));\n\n  if (error) {\n    console.log(error);\n  }\n\n  return json({ scoringSession: data });\n};\n\nexport default function ScoringSessionRoute() {\n  const { scoringSession } = useLoaderData();\n\n  return (\n    <div>\n      <pre>{JSON.stringify({ scoringSession }, undefined, 2)}</pre>\n    </div>\n  );\n}\n", "import React from 'react';\nimport { json } from '@remix-run/node';\nimport type { LoaderFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { ClientOnly } from 'remix-utils';\n\nimport supabase from '~/lib/supabase.server';\nimport type { definitions } from 'types/supabase';\nimport SetupWrapper from '~/components/Setup/SetupWrapper';\n\nexport const loader: LoaderFunction = async () => {\n  const coursesPromise = supabase.from('courses');\n  const playersPromise = supabase.from('players');\n\n  let [{ data: courses }, { data: players }] = await Promise.all([coursesPromise, playersPromise]);\n\n  return json({\n    courses,\n    players: players ? players.map((p) => ({ ...p, playerId: p.id, strokes: 10 })) : [],\n  });\n};\n\nexport default function PlayIndex() {\n  const { courses, players } = useLoaderData<{\n    courses: definitions['courses'][];\n    players: definitions['players'][];\n  }>();\n\n  return (\n    <ClientOnly fallback={<p>Loading...</p>}>\n      {() => <SetupWrapper courses={courses} players={players} />}\n    </ClientOnly>\n  );\n}\n", "import { Button, Container, Divider, Spacer } from '@nextui-org/react';\nimport React from 'react';\nimport type { definitions } from 'types/supabase';\n\nimport Initial from '~/components/Setup/Initial';\nimport SelectPlayers from '~/components/Setup/SelectPlayers';\nimport Setup from '~/components/Setup/Setup';\n\nexport interface ScoringPlayer {\n  id: number;\n  strokes: number;\n  first_name: string;\n  last_name: string;\n  photo?: string;\n}\nexport interface ScoringTeam {\n  id: number;\n  strokes: number;\n  playerIds: number[];\n}\n\nexport interface PlayState {\n  step: 'initial' | 'players' | 'setup';\n  special: boolean;\n  eventType: definitions['events']['type'];\n  scoringType: definitions['events']['scoring'];\n  course?: definitions['courses'];\n  players: ScoringPlayer[];\n  teams: ScoringTeam[];\n}\n\nconst steps = ['initial', 'players', 'setup'];\n\nexport default function SetupWrapper({\n  courses,\n  players,\n}: {\n  courses: definitions['courses'][];\n  players: definitions['players'][];\n}) {\n  const [playState, setPlayState] = React.useState<PlayState>(() => {\n    const data = window.localStorage.getItem('PLAY_STATE');\n    if (data !== null) {\n      return JSON.parse(data);\n    } else {\n      return {\n        step: 'initial',\n        special: false,\n        eventType: 'INDIVIDUAL',\n        scoringType: 'POINTS',\n        course: undefined,\n        players: [],\n        teams: [],\n      };\n    }\n  });\n\n  React.useEffect(() => {\n    window.localStorage.setItem('PLAY_STATE', JSON.stringify(playState));\n  }, [playState]);\n\n  const setPlayStateKey = (key: string, value: any) =>\n    setPlayState((prev) => ({ ...prev, [key]: value }));\n\n  const stepBack = () => {\n    const index = steps.findIndex((s) => s === playState.step);\n    if (index > 0) {\n      setPlayStateKey('step', steps[index - 1]);\n    }\n  };\n\n  return (\n    <Container css={{ paddingTop: '25px' }}>\n      {playState.step !== 'initial' && (\n        <>\n          <Button light color=\"secondary\" size=\"sm\" onClick={stepBack}>\n            &larr; Tillbaka\n          </Button>\n          <Spacer />\n          <Divider />\n          <Spacer />\n        </>\n      )}\n      {playState.step === 'initial' && (\n        <Initial playState={playState} setPlayStateKey={setPlayStateKey} courses={courses} />\n      )}\n      {playState.step === 'players' && (\n        <SelectPlayers\n          players={players}\n          eventType={playState.eventType}\n          setPlayStateKey={setPlayStateKey}\n          chosenPlayers={playState.players}\n        />\n      )}\n      {playState.step === 'setup' && (\n        <Setup playState={playState} setPlayStateKey={setPlayStateKey} />\n      )}\n    </Container>\n  );\n}\n", "import { Button, Col, Grid, Radio, Spacer, Switch, Text } from '@nextui-org/react';\nimport React from 'react';\nimport type { definitions } from 'types/supabase';\nimport type { PlayState } from './SetupWrapper';\n\nconst Initial: React.FC<{\n  playState: PlayState;\n  courses: definitions['courses'][];\n  setPlayStateKey: (key: string, value: any) => void;\n}> = ({ playState, courses, setPlayStateKey }) => {\n  const setCourseId = (id: string | number) => {\n    const course = courses.find((c) => c.id === id);\n    setPlayStateKey('course', course);\n  };\n\n  console.log(playState);\n\n  return (\n    <>\n      <Grid.Container gap={2}>\n        <Grid>\n          <Switch\n            id=\"special\"\n            size=\"lg\"\n            checked={playState.special}\n            onChange={(e) => setPlayStateKey('special', e.target.checked)}\n          />\n        </Grid>\n        <Grid>\n          <Text h4>Vanlig vecka</Text>\n        </Grid>\n      </Grid.Container>\n      <Spacer y={1} />\n      <Radio.Group\n        onChange={(val) => setPlayStateKey('eventType', val)}\n        value={playState.eventType}\n        row\n      >\n        <Radio size=\"lg\" value=\"INDIVIDUAL\">\n          Individuellt\n        </Radio>\n        <Radio size=\"lg\" value=\"TEAM\">\n          Lag\n        </Radio>\n      </Radio.Group>\n      <Spacer y={1} />\n      <Radio.Group\n        onChange={(val) => setPlayStateKey('scoringType', val)}\n        value={playState.scoringType}\n        row\n      >\n        <Radio size=\"lg\" value=\"POINTS\">\n          Po\u00E4ng\n        </Radio>\n        <Radio size=\"lg\" value=\"STROKES\">\n          Slag\n        </Radio>\n      </Radio.Group>\n      <Spacer y={1} />\n\n      <Text h3>V\u00E4lj bana</Text>\n      <Radio.Group onChange={setCourseId} value={playState.course ? playState.course.id : ''}>\n        {courses.map((course) => (\n          <Radio size=\"lg\" key={course.id} value={course.id}>\n            {course.club} - {course.name}\n          </Radio>\n        ))}\n      </Radio.Group>\n      <Spacer y={1} />\n      {playState.course && (\n        <Button onClick={() => setPlayStateKey('step', 'players')}>V\u00E4lj Spelare</Button>\n      )}\n    </>\n  );\n};\n\nexport default Initial;\n", "import { Button, Checkbox, Spacer, Text, User } from '@nextui-org/react';\nimport React from 'react';\nimport type { definitions } from 'types/supabase';\nimport type { ScoringPlayer } from './SetupWrapper';\n\nconst SelectPlayers: React.FC<{\n  players: definitions['players'][];\n  chosenPlayers: ScoringPlayer[];\n  eventType: definitions['events']['type'];\n  setPlayStateKey: (key: string, value: any) => void;\n}> = ({ players, chosenPlayers, eventType, setPlayStateKey }) => {\n  const chosenPlayerIds = chosenPlayers.map((p) => p.id.toString());\n\n  const toggleChecked = (id: string) => {\n    if (chosenPlayerIds.includes(id)) {\n      setPlayStateKey(\n        'players',\n        chosenPlayers.filter((p) => p.id.toString() !== id),\n      );\n    } else {\n      const player = players.find((p) => p.id.toString() === id);\n      if (player) {\n        const scoringPlayer = { ...player, strokes: 10 };\n        setPlayStateKey('players', [...chosenPlayers, scoringPlayer]);\n      }\n    }\n  };\n\n  const gotoSetup = () => {\n    if (eventType === 'TEAM') {\n      setPlayStateKey('teams', [\n        { strokes: 10, playerIds: [] },\n        { strokes: 10, playerIds: [] },\n        { strokes: 10, playerIds: [] },\n        { strokes: 10, playerIds: [] },\n      ]);\n    }\n    setPlayStateKey('step', 'setup');\n  };\n\n  return (\n    <>\n      <Text h4>V\u00E4lj Spelare</Text>\n      <Spacer />\n      <Checkbox.Group defaultValue={chosenPlayerIds}>\n        {players.map((player) => (\n          <Checkbox\n            key={player.id}\n            name=\"playerIds\"\n            value={player.id.toString()}\n            onChange={(e) => toggleChecked(player.id.toString())}\n          >\n            <User src={player.photo} name={`${player.first_name} ${player.last_name}`} size=\"md\" />\n          </Checkbox>\n        ))}\n      </Checkbox.Group>\n\n      <Spacer y={1} />\n      {chosenPlayers.length !== 0 && (\n        <Button onClick={gotoSetup}>\n          {eventType === 'INDIVIDUAL' ? 'St\u00E4ll in slag' : 'S\u00E4tt upp lag'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default SelectPlayers;\n", "import React from 'react';\nimport { useSubmit } from '@remix-run/react';\nimport invariant from 'tiny-invariant';\nimport type { PlayState } from './SetupWrapper';\nimport { User, Button, Text, Input, Card, Divider, Spacer, Grid } from '@nextui-org/react';\n\nconst Setup: React.FC<{\n  playState: PlayState;\n  setPlayStateKey: (key: string, value: any) => void;\n}> = ({ playState, setPlayStateKey }) => {\n  invariant(playState.course, 'Course has to be set');\n  const submit = useSubmit();\n\n  const setStrokes = (id: number, val: number) => {\n    const updatedPlayers = playState.players.map((p) => {\n      if (p.id === id) {\n        p.strokes = val;\n      }\n      return { ...p };\n    });\n    setPlayStateKey('players', updatedPlayers);\n  };\n\n  const setTeamStrokes = (index: number, val: number) => {\n    const updatedTeams = playState.teams.map((t, tIndex) => {\n      if (tIndex === index) {\n        t.strokes = val;\n      }\n      return { ...t };\n    });\n    setPlayStateKey('teams', updatedTeams);\n  };\n\n  const removePlayerFromTeam = (id: number, teamIndex: number) => {\n    const newTeams = [...playState.teams];\n    newTeams[teamIndex].playerIds = newTeams[teamIndex].playerIds.filter((pid) => pid !== id);\n    setPlayStateKey('teams', newTeams);\n  };\n\n  const addPlayerToTeam = (id: number, teamIndex: number) => {\n    const newTeams = [...playState.teams];\n    newTeams[teamIndex].playerIds.push(id);\n    setPlayStateKey('teams', newTeams);\n  };\n\n  const submitForm = () => {\n    window.localStorage.removeItem('PLAY_STATE');\n    submit(\n      { json: JSON.stringify(playState) },\n      { method: 'post', action: '/scoring_sessions?index' },\n    );\n  };\n\n  const isTeamEvent = playState.eventType === 'TEAM';\n  const selectedPlayerIds = playState.teams.map((t) => t.playerIds).flat();\n  const availablePlayers = playState.players.filter((p) => !selectedPlayerIds.includes(p.id));\n\n  return (\n    <>\n      <Text h4>{isTeamEvent ? `S\u00E4tt ihop lag (+slag)` : `St\u00E4ll in slag`}</Text>\n\n      {isTeamEvent && (\n        <>\n          {playState.teams.map((team, index: number) => {\n            if (availablePlayers.length === 0 && team.playerIds.length === 0) {\n              return null;\n            }\n            return (\n              <Card key={index} hoverable css={{ marginTop: 25 }}>\n                <Card.Header>\n                  <Text>Lag {`${index + 1}`}</Text>\n                  <Spacer />\n                  <Input\n                    type=\"number\"\n                    bordered\n                    value={team.strokes}\n                    onChange={(e) => setTeamStrokes(index, parseInt(e.target.value, 10))}\n                  />\n                </Card.Header>\n                <Divider />\n                <Divider />\n                <Card.Body css={{ py: '$10' }}>\n                  <Text>Spelare i laget</Text>\n                  <Spacer />\n                  {playState.players\n                    .filter((p) => team.playerIds.includes(p.id))\n                    .map((player) => (\n                      <User\n                        src={player.photo}\n                        name={`${player.first_name} ${player.last_name}`}\n                        size=\"sm\"\n                        key={player.id}\n                        onClick={() => removePlayerFromTeam(player.id, index)}\n                        pointer\n                      />\n                    ))}\n                  <Spacer y={2} />\n                  <Divider />\n                  <Spacer y={1} />\n                  <Text>Tillg\u00E4ngliga spelare</Text>\n                  <Spacer />\n                  {availablePlayers.map((player) => (\n                    <User\n                      src={player.photo}\n                      name={`${player.first_name} ${player.last_name}`}\n                      size=\"sm\"\n                      key={player.id}\n                      onClick={() => addPlayerToTeam(player.id, index)}\n                      pointer\n                    />\n                  ))}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </>\n      )}\n\n      {!isTeamEvent && (\n        <>\n          {playState.players.map((player) => (\n            <Card key={player.id} hoverable css={{ marginTop: 25 }}>\n              <Card.Header>\n                <User\n                  src={player.photo}\n                  name={`${player.first_name} ${player.last_name}`}\n                  size=\"sm\"\n                />\n              </Card.Header>\n              <Card.Body>\n                <Input\n                  type=\"number\"\n                  bordered\n                  value={player.strokes}\n                  onChange={(e) => setStrokes(player.id, parseInt(e.target.value, 10))}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </>\n      )}\n\n      <Button onClick={submitForm}>SKAPA RUNDA</Button>\n    </>\n  );\n};\n\nexport default Setup;\n", "import { json } from '@remix-run/node';\nimport type { LoaderFunction } from '@remix-run/node';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { Button, Container } from '@nextui-org/react';\n\nimport Stats from '~/components/Stats';\nimport SeasonLeaderboard from '~/components/SeasonLeaderboard';\nimport Event from '~/components/Event';\nimport type { definitions } from 'types/supabase';\nimport supabase from '~/lib/supabase.server';\nimport { ThemeToggle } from '~/components/ThemeToggle';\n\nexport const loader: LoaderFunction = async () => {\n  const { data: season } = await supabase.from('seasons').select('*').eq('name', '2022').single();\n  const { data: events } = await supabase.from('events').select('id').eq('status', 'FINISHED');\n  return json({ season, events });\n};\n\nexport default function Index() {\n  const { season, events } = useLoaderData<{\n    season: definitions['seasons'];\n    events: definitions['events'][];\n  }>();\n\n  if (!season) {\n    return <h1>Kunde inte hitta s\u00E4song.. Kim har gjort bort sig</h1>;\n  }\n\n  return (\n    <Container>\n      <header>\n        <h2>Tisdagsgolfen {season.name}</h2>\n        <ThemeToggle />\n        <Link to=\"/play\">\n          <Button size=\"sm\" color=\"gradient\">\n            NY RUNDA\n          </Button>\n        </Link>\n      </header>\n      <main>\n        <Stats />\n        <SeasonLeaderboard season={season} events={events} />\n        <Event />\n      </main>\n    </Container>\n  );\n}\n", "import { Card, Text } from '@nextui-org/react';\nimport React from 'react';\n\nconst Stats = () => {\n  return (\n    <Card clickable bordered css={{ mw: '400px' }}>\n      <Card.Header>\n        <Text h4 color=\"gradient\">\n          Statistics\n        </Text>\n      </Card.Header>\n    </Card>\n  );\n};\n\nexport default Stats;\n", "import React from 'react';\ninterface Props {\n  // TODO: FIX!\n  season: any;\n  events: any;\n}\n\nconst SeasonLeaderboard: React.FunctionComponent<Props> = ({ season, events }) => {\n  return (\n    <div>\n      <h2>Ledartavla efter {events.length} rundor</h2>\n    </div>\n  );\n};\n\nexport default SeasonLeaderboard;\n", "import React from 'react';\n\nconst Event = () => {\n  return (\n    <div>\n      <h2>Event leaderboard</h2>\n    </div>\n  );\n};\n\nexport default Event;\n", "import React from 'react';\nimport type { CSS } from '@nextui-org/react';\nimport { styled, useTheme } from '@nextui-org/react';\nimport { MoonIcon, SunIcon } from '~/components/Icons';\nimport useDarkMode from '@fisch0920/use-dark-mode';\n\ninterface Props {\n  className?: string;\n  css?: CSS;\n}\n\n// @ts-ignore\nconst StyledButton = styled('button', {\n  dflex: 'center',\n  size: 'auto',\n  cursor: 'pointer',\n  background: 'transparent',\n  border: 'none',\n  padding: 0,\n  '& .theme-selector-icon': {\n    color: '$colors$headerIconColor',\n  },\n  '@xsMax': {\n    px: '$2',\n  },\n});\n\nexport const ThemeToggle: React.FC<Props> = ({ className = '', css }) => {\n  const darkMode = useDarkMode();\n  const { isDark } = useTheme();\n\n  const handleToggleTheme = React.useCallback(() => {\n    darkMode.toggle();\n  }, [darkMode]);\n\n  return (\n    <StyledButton\n      aria-label=\"toggle a light and dark color scheme\"\n      className={`theme-selector-container ${className}`}\n      onClick={handleToggleTheme}\n      css={css}\n    >\n      {isDark ? (\n        <SunIcon filled className=\"theme-selector-icon\" size={20} />\n      ) : (\n        <MoonIcon filled className=\"theme-selector-icon\" size={20} />\n      )}\n    </StyledButton>\n  );\n};\n\nexport default ThemeToggle;\n", "import * as React from 'react';\nimport type { IconProps } from './index';\n\nconst Moon: React.FC<IconProps> = ({\n  fill = 'currentColor',\n  filled,\n  size,\n  height,\n  width,\n  label,\n  ...props\n}) => {\n  if (filled) {\n    return (\n      <svg width={size || width || 24} height={size || height || 24} viewBox=\"0 0 24 24\" {...props}>\n        <path\n          d=\"M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z\"\n          fill={fill}\n        />\n      </svg>\n    );\n  }\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size || width || 24}\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      {...props}\n    >\n      <path\n        fill={fill}\n        d=\"M20.742,13.045c-0.677,0.18-1.376,0.271-2.077,0.271c-2.135,0-4.14-0.83-5.646-2.336c-2.008-2.008-2.799-4.967-2.064-7.723 c0.092-0.345-0.007-0.713-0.259-0.965C10.444,2.04,10.077,1.938,9.73,2.034C8.028,2.489,6.476,3.382,5.241,4.616 c-3.898,3.898-3.898,10.243,0,14.143c1.889,1.889,4.401,2.93,7.072,2.93c2.671,0,5.182-1.04,7.07-2.929 c1.236-1.237,2.13-2.791,2.583-4.491c0.092-0.345-0.008-0.713-0.26-0.965C21.454,13.051,21.085,12.951,20.742,13.045z M17.97,17.346c-1.511,1.511-3.52,2.343-5.656,2.343c-2.137,0-4.146-0.833-5.658-2.344c-3.118-3.119-3.118-8.195,0-11.314 c0.602-0.602,1.298-1.102,2.06-1.483c-0.222,2.885,0.814,5.772,2.89,7.848c2.068,2.069,4.927,3.12,7.848,2.891 C19.072,16.046,18.571,16.743,17.97,17.346z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Moon;\n", "import * as React from 'react';\nimport type { IconProps } from './index';\n\nconst Sun: React.FC<IconProps> = ({\n  fill = 'currentColor',\n  filled,\n  size,\n  height,\n  width,\n  label,\n  ...props\n}) => {\n  if (filled) {\n    return (\n      <svg width={size || width || 24} height={size || height || 24} viewBox=\"0 0 24 24\" {...props}>\n        <g fill={fill}>\n          <path d=\"M19 12a7 7 0 11-7-7 7 7 0 017 7z\" />\n          <path d=\"M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z\" />\n        </g>\n      </svg>\n    );\n  }\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size || width || 24}\n      height={size || height || 24}\n      viewBox=\"0 0 24 24\"\n      {...props}\n    >\n      <path\n        fill={fill}\n        d=\"M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19H12.998V22H10.998zM10.998 2H12.998V5H10.998zM1.998 11H4.998V13H1.998zM18.998 11H21.998V13H18.998z\"\n      ></path>\n      <path\n        fill={fill}\n        transform=\"rotate(-45.017 5.986 18.01)\"\n        d=\"M4.487 17.01H7.487V19.01H4.487z\"\n      ></path>\n      <path\n        fill={fill}\n        transform=\"rotate(-45.001 18.008 5.99)\"\n        d=\"M16.508 4.99H19.509V6.99H16.508z\"\n      ></path>\n      <path\n        fill={fill}\n        transform=\"rotate(-134.983 5.988 5.99)\"\n        d=\"M4.487 4.99H7.487V6.99H4.487z\"\n      ></path>\n      <path\n        fill={fill}\n        transform=\"rotate(134.999 18.008 18.01)\"\n        d=\"M17.008 16.51H19.008V19.511000000000003H17.008z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Sun;\n", "export default {'version':'324335e3','entry':{'module':'/build/entry.client-YZSXUIZF.js','imports':['/build/_shared/chunk-YXNAEJ7M.js','/build/_shared/chunk-HZV4V7FZ.js','/build/_shared/chunk-DOWUSMN5.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-Q4WJNPT6.js','imports':['/build/_shared/chunk-VZNMDY7J.js','/build/_shared/chunk-ZJZVROKQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-E2IPNQ6H.js','imports':['/build/_shared/chunk-H2WHWM26.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/play/index':{'id':'routes/play/index','parentId':'root','path':'play','index':true,'caseSensitive':undefined,'module':'/build/routes/play/index-ZIFCMC7C.js','imports':['/build/_shared/chunk-OICRSNGP.js','/build/_shared/chunk-H2WHWM26.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/scoring_sessions/$id':{'id':'routes/scoring_sessions/$id','parentId':'root','path':'scoring_sessions/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/scoring_sessions/$id-ZJPAUKCE.js','imports':['/build/_shared/chunk-OICRSNGP.js','/build/_shared/chunk-H2WHWM26.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/scoring_sessions/index':{'id':'routes/scoring_sessions/index','parentId':'root','path':'scoring_sessions','index':true,'caseSensitive':undefined,'module':'/build/routes/scoring_sessions/index-2CWQSTGW.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-324335E3.js'};", "\nimport * as entryServer from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/root.tsx\";\nimport * as route1 from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/scoring_sessions/index.tsx\";\nimport * as route2 from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/scoring_sessions/$id.tsx\";\nimport * as route3 from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/play/index.tsx\";\nimport * as route4 from \"/Users/kimf/projects/tisdagsgolfen/2022/tisdagsgolfen-remix/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/scoring_sessions/index\": {\n      id: \"routes/scoring_sessions/index\",\n      parentId: \"root\",\n      path: \"scoring_sessions\",\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/scoring_sessions/$id\": {\n      id: \"routes/scoring_sessions/$id\",\n      parentId: \"root\",\n      path: \"scoring_sessions/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/play/index\": {\n      id: \"routes/play/index\",\n      parentId: \"root\",\n      path: \"play\",\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": "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",
  "names": []
}
